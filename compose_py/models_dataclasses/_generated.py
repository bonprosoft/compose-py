# generated by datamodel-codegen:
#   filename:  compose-spec.json

from __future__ import annotations

from dataclasses import dataclass
from enum import Enum
from typing import Any, Dict, List, Optional, Union


class Cgroup(str, Enum):
    HOST = 'host'
    PRIVATE = 'private'


@dataclass
class CredentialSpec:
    config: Optional[str] = None
    file: Optional[str] = None
    registry: Optional[str] = None


class Condition(str, Enum):
    SERVICE_STARTED = 'service_started'
    SERVICE_HEALTHY = 'service_healthy'
    SERVICE_COMPLETED_SUCCESSFULLY = 'service_completed_successfully'


@dataclass
class DependsOn:
    condition: Condition
    restart: Optional[bool] = None


@dataclass
class Extend:
    service: str
    file: Optional[str] = None


@dataclass
class Logging:
    driver: Optional[str] = None
    options: Optional[Dict[str, Optional[Union[str, float]]]] = None


@dataclass
class Port:
    mode: Optional[str] = None
    host_ip: Optional[str] = None
    target: Optional[int] = None
    published: Optional[Union[str, int]] = None
    protocol: Optional[str] = None


class PullPolicy(str, Enum):
    ALWAYS = 'always'
    NEVER = 'never'
    IF_NOT_PRESENT = 'if_not_present'
    BUILD = 'build'
    MISSING = 'missing'


@dataclass
class Ulimit:
    hard: int
    soft: int


class Selinux(str, Enum):
    Z = 'z'
    z_1 = 'Z'


@dataclass
class Bind:
    propagation: Optional[str] = None
    create_host_path: Optional[bool] = None
    selinux: Optional[Selinux] = None


@dataclass
class Volume2:
    nocopy: Optional[bool] = None


@dataclass
class Tmpfs:
    size: Optional[Union[int, str]] = None
    mode: Optional[float] = None


@dataclass
class Volume1:
    type: str
    source: Optional[str] = None
    target: Optional[str] = None
    read_only: Optional[bool] = None
    consistency: Optional[str] = None
    bind: Optional[Bind] = None
    volume: Optional[Volume2] = None
    tmpfs: Optional[Tmpfs] = None


@dataclass
class Healthcheck:
    disable: Optional[bool] = None
    interval: Optional[str] = None
    retries: Optional[float] = None
    test: Optional[Union[str, List[str]]] = None
    timeout: Optional[str] = None
    start_period: Optional[str] = None


class Order(str, Enum):
    START_FIRST = 'start-first'
    STOP_FIRST = 'stop-first'


@dataclass
class RollbackConfig:
    parallelism: Optional[int] = None
    delay: Optional[str] = None
    failure_action: Optional[str] = None
    monitor: Optional[str] = None
    max_failure_ratio: Optional[float] = None
    order: Optional[Order] = None


@dataclass
class UpdateConfig:
    parallelism: Optional[int] = None
    delay: Optional[str] = None
    failure_action: Optional[str] = None
    monitor: Optional[str] = None
    max_failure_ratio: Optional[float] = None
    order: Optional[Order] = None


@dataclass
class Limits:
    cpus: Optional[Union[float, str]] = None
    memory: Optional[str] = None
    pids: Optional[int] = None


@dataclass
class RestartPolicy:
    condition: Optional[str] = None
    delay: Optional[str] = None
    max_attempts: Optional[int] = None
    window: Optional[str] = None


@dataclass
class Preference:
    spread: Optional[str] = None


@dataclass
class Placement:
    constraints: Optional[List[str]] = None
    preferences: Optional[List[Preference]] = None
    max_replicas_per_node: Optional[int] = None


@dataclass
class DiscreteResourceSpec:
    kind: Optional[str] = None
    value: Optional[float] = None


@dataclass
class GenericResource:
    discrete_resource_spec: Optional[DiscreteResourceSpec] = None


@dataclass
class ConfigItem:
    subnet: Optional[str] = None
    ip_range: Optional[str] = None
    gateway: Optional[str] = None
    aux_addresses: Optional[Dict[str, str]] = None


@dataclass
class Ipam:
    driver: Optional[str] = None
    config: Optional[List[ConfigItem]] = None
    options: Optional[Dict[str, str]] = None


@dataclass
class External:
    name: Optional[str] = None


@dataclass
class BlkioLimit:
    path: Optional[str] = None
    rate: Optional[Union[int, str]] = None


@dataclass
class BlkioWeight:
    path: Optional[str] = None
    weight: Optional[int] = None


@dataclass
class ServiceConfigOrSecretItem:
    source: Optional[str] = None
    target: Optional[str] = None
    uid: Optional[str] = None
    gid: Optional[str] = None
    mode: Optional[float] = None


Constraints = Any


@dataclass
class BuildItem:
    context: Optional[str] = None
    dockerfile: Optional[str] = None
    dockerfile_inline: Optional[str] = None
    args: Optional[
        Union[Dict[str, Optional[Union[str, float, bool]]], List[str]]
    ] = None
    ssh: Optional[Union[Dict[str, Optional[Union[str, float, bool]]], List[str]]] = None
    labels: Optional[
        Union[Dict[str, Optional[Union[str, float, bool]]], List[str]]
    ] = None
    cache_from: Optional[List[str]] = None
    cache_to: Optional[List[str]] = None
    no_cache: Optional[bool] = None
    additional_contexts: Optional[
        Union[Dict[str, Optional[Union[str, float, bool]]], List[str]]
    ] = None
    network: Optional[str] = None
    pull: Optional[bool] = None
    target: Optional[str] = None
    shm_size: Optional[Union[int, str]] = None
    extra_hosts: Optional[
        Union[Dict[str, Optional[Union[str, float, bool]]], List[str]]
    ] = None
    isolation: Optional[str] = None
    privileged: Optional[bool] = None
    secrets: Optional[List[Union[str, ServiceConfigOrSecretItem]]] = None
    tags: Optional[List[str]] = None
    platforms: Optional[List[str]] = None


@dataclass
class BlkioConfig:
    device_read_bps: Optional[List[BlkioLimit]] = None
    device_read_iops: Optional[List[BlkioLimit]] = None
    device_write_bps: Optional[List[BlkioLimit]] = None
    device_write_iops: Optional[List[BlkioLimit]] = None
    weight: Optional[int] = None
    weight_device: Optional[List[BlkioWeight]] = None


@dataclass
class Network1:
    aliases: Optional[List[str]] = None
    ipv4_address: Optional[str] = None
    ipv6_address: Optional[str] = None
    link_local_ips: Optional[List[str]] = None
    priority: Optional[float] = None


@dataclass
class Device:
    capabilities: Optional[List[str]] = None
    count: Optional[Union[str, int]] = None
    device_ids: Optional[List[str]] = None
    driver: Optional[str] = None
    options: Optional[
        Union[Dict[str, Optional[Union[str, float, bool]]], List[str]]
    ] = None


@dataclass
class Network:
    name: Optional[str] = None
    driver: Optional[str] = None
    driver_opts: Optional[Dict[str, Union[str, float]]] = None
    ipam: Optional[Ipam] = None
    external: Optional[External] = None
    internal: Optional[bool] = None
    enable_ipv6: Optional[bool] = None
    attachable: Optional[bool] = None
    labels: Optional[
        Union[Dict[str, Optional[Union[str, float, bool]]], List[str]]
    ] = None


@dataclass
class Volume:
    name: Optional[str] = None
    driver: Optional[str] = None
    driver_opts: Optional[Dict[str, Union[str, float]]] = None
    external: Optional[External] = None
    labels: Optional[
        Union[Dict[str, Optional[Union[str, float, bool]]], List[str]]
    ] = None


@dataclass
class Secret:
    name: Optional[str] = None
    environment: Optional[str] = None
    file: Optional[str] = None
    external: Optional[External] = None
    labels: Optional[
        Union[Dict[str, Optional[Union[str, float, bool]]], List[str]]
    ] = None
    driver: Optional[str] = None
    driver_opts: Optional[Dict[str, Union[str, float]]] = None
    template_driver: Optional[str] = None


@dataclass
class Config:
    name: Optional[str] = None
    file: Optional[str] = None
    external: Optional[External] = None
    labels: Optional[
        Union[Dict[str, Optional[Union[str, float, bool]]], List[str]]
    ] = None
    template_driver: Optional[str] = None


@dataclass
class Reservations:
    cpus: Optional[Union[float, str]] = None
    memory: Optional[str] = None
    generic_resources: Optional[List[GenericResource]] = None
    devices: Optional[List[Device]] = None


@dataclass
class Resources:
    limits: Optional[Limits] = None
    reservations: Optional[Reservations] = None


@dataclass
class Deployment:
    mode: Optional[str] = None
    endpoint_mode: Optional[str] = None
    replicas: Optional[int] = None
    labels: Optional[
        Union[Dict[str, Optional[Union[str, float, bool]]], List[str]]
    ] = None
    rollback_config: Optional[RollbackConfig] = None
    update_config: Optional[UpdateConfig] = None
    resources: Optional[Resources] = None
    restart_policy: Optional[RestartPolicy] = None
    placement: Optional[Placement] = None


@dataclass
class Service:
    deploy: Optional[Deployment] = None
    annotations: Optional[
        Union[Dict[str, Optional[Union[str, float, bool]]], List[str]]
    ] = None
    build: Optional[Union[str, BuildItem]] = None
    blkio_config: Optional[BlkioConfig] = None
    cap_add: Optional[List[str]] = None
    cap_drop: Optional[List[str]] = None
    cgroup: Optional[Cgroup] = None
    cgroup_parent: Optional[str] = None
    command: Optional[Union[str, List[str]]] = None
    configs: Optional[List[Union[str, ServiceConfigOrSecretItem]]] = None
    container_name: Optional[str] = None
    cpu_count: Optional[int] = None
    cpu_percent: Optional[int] = None
    cpu_shares: Optional[Union[float, str]] = None
    cpu_quota: Optional[Union[float, str]] = None
    cpu_period: Optional[Union[float, str]] = None
    cpu_rt_period: Optional[Union[float, str]] = None
    cpu_rt_runtime: Optional[Union[float, str]] = None
    cpus: Optional[Union[float, str]] = None
    cpuset: Optional[str] = None
    credential_spec: Optional[CredentialSpec] = None
    depends_on: Optional[Union[Dict[str, DependsOn], List[str]]] = None
    device_cgroup_rules: Optional[List[str]] = None
    devices: Optional[List[str]] = None
    dns: Optional[Union[str, List[str]]] = None
    dns_opt: Optional[List[str]] = None
    dns_search: Optional[Union[str, List[str]]] = None
    domainname: Optional[str] = None
    entrypoint: Optional[Union[str, List[str]]] = None
    env_file: Optional[Union[str, List[str]]] = None
    environment: Optional[
        Union[Dict[str, Optional[Union[str, float, bool]]], List[str]]
    ] = None
    expose: Optional[List[Union[str, float]]] = None
    extends: Optional[Union[str, Extend]] = None
    external_links: Optional[List[str]] = None
    extra_hosts: Optional[
        Union[Dict[str, Optional[Union[str, float, bool]]], List[str]]
    ] = None
    group_add: Optional[List[Union[str, float]]] = None
    healthcheck: Optional[Healthcheck] = None
    hostname: Optional[str] = None
    image: Optional[str] = None
    init: Optional[bool] = None
    ipc: Optional[str] = None
    isolation: Optional[str] = None
    labels: Optional[
        Union[Dict[str, Optional[Union[str, float, bool]]], List[str]]
    ] = None
    links: Optional[List[str]] = None
    logging: Optional[Logging] = None
    mac_address: Optional[str] = None
    mem_limit: Optional[Union[float, str]] = None
    mem_reservation: Optional[Union[str, int]] = None
    mem_swappiness: Optional[int] = None
    memswap_limit: Optional[Union[float, str]] = None
    network_mode: Optional[str] = None
    networks: Optional[Union[Dict[str, Optional[Network1]], List[str]]] = None
    oom_kill_disable: Optional[bool] = None
    oom_score_adj: Optional[int] = None
    pid: Optional[str] = None
    pids_limit: Optional[Union[float, str]] = None
    platform: Optional[str] = None
    ports: Optional[List[Union[float, str, Port]]] = None
    privileged: Optional[bool] = None
    profiles: Optional[List[str]] = None
    pull_policy: Optional[PullPolicy] = None
    read_only: Optional[bool] = None
    restart: Optional[str] = None
    runtime: Optional[str] = None
    scale: Optional[int] = None
    security_opt: Optional[List[str]] = None
    shm_size: Optional[Union[float, str]] = None
    secrets: Optional[List[Union[str, ServiceConfigOrSecretItem]]] = None
    sysctls: Optional[
        Union[Dict[str, Optional[Union[str, float, bool]]], List[str]]
    ] = None
    stdin_open: Optional[bool] = None
    stop_grace_period: Optional[str] = None
    stop_signal: Optional[str] = None
    storage_opt: Optional[Dict[str, Any]] = None
    tmpfs: Optional[Union[str, List[str]]] = None
    tty: Optional[bool] = None
    ulimits: Optional[Dict[str, Union[int, Ulimit]]] = None
    user: Optional[str] = None
    uts: Optional[str] = None
    userns_mode: Optional[str] = None
    volumes: Optional[List[Union[str, Volume1]]] = None
    volumes_from: Optional[List[str]] = None
    working_dir: Optional[str] = None


@dataclass
class ComposeSpecification:
    version: Optional[str] = None
    name: Optional[str] = None
    services: Optional[Dict[str, Service]] = None
    networks: Optional[Dict[str, Optional[Network]]] = None
    volumes: Optional[Dict[str, Optional[Volume]]] = None
    secrets: Optional[Dict[str, Secret]] = None
    configs: Optional[Dict[str, Config]] = None
